use crate::iced::{
    touch::{self, Finger},
    Point,
};
use bevy_input::prelude::KeyCode as BevyKeyCode;
use bevy_input::prelude::MouseButton;
use bevy_input::touch::{TouchInput, TouchPhase};
use bevy_math::Vec2;
use iced_core::keyboard::KeyCode as IcedKeyCode;

pub fn key_code(virtual_keycode: BevyKeyCode) -> IcedKeyCode {
    // TODO: We need https://github.com/iced-rs/iced/pull/2169 to update
    // winit and Iced keys in `iced/core/src/keyboard/key_code.rs` to match
    // with bevy again
    match virtual_keycode {
        BevyKeyCode::Digit1 => IcedKeyCode::Key1,
        BevyKeyCode::Digit2 => IcedKeyCode::Key2,
        BevyKeyCode::Digit3 => IcedKeyCode::Key3,
        BevyKeyCode::Digit4 => IcedKeyCode::Key4,
        BevyKeyCode::Digit5 => IcedKeyCode::Key5,
        BevyKeyCode::Digit6 => IcedKeyCode::Key6,
        BevyKeyCode::Digit7 => IcedKeyCode::Key7,
        BevyKeyCode::Digit8 => IcedKeyCode::Key8,
        BevyKeyCode::Digit9 => IcedKeyCode::Key9,
        BevyKeyCode::Digit0 => IcedKeyCode::Key0,
        BevyKeyCode::KeyA => IcedKeyCode::A,
        BevyKeyCode::KeyB => IcedKeyCode::B,
        BevyKeyCode::KeyC => IcedKeyCode::C,
        BevyKeyCode::KeyD => IcedKeyCode::D,
        BevyKeyCode::KeyE => IcedKeyCode::E,
        BevyKeyCode::KeyF => IcedKeyCode::F,
        BevyKeyCode::KeyG => IcedKeyCode::G,
        BevyKeyCode::KeyH => IcedKeyCode::H,
        BevyKeyCode::KeyI => IcedKeyCode::I,
        BevyKeyCode::KeyJ => IcedKeyCode::J,
        BevyKeyCode::KeyK => IcedKeyCode::K,
        BevyKeyCode::KeyL => IcedKeyCode::L,
        BevyKeyCode::KeyM => IcedKeyCode::M,
        BevyKeyCode::KeyN => IcedKeyCode::N,
        BevyKeyCode::KeyO => IcedKeyCode::O,
        BevyKeyCode::KeyP => IcedKeyCode::P,
        BevyKeyCode::KeyQ => IcedKeyCode::Q,
        BevyKeyCode::KeyR => IcedKeyCode::R,
        BevyKeyCode::KeyS => IcedKeyCode::S,
        BevyKeyCode::KeyT => IcedKeyCode::T,
        BevyKeyCode::KeyU => IcedKeyCode::U,
        BevyKeyCode::KeyV => IcedKeyCode::V,
        BevyKeyCode::KeyW => IcedKeyCode::W,
        BevyKeyCode::KeyX => IcedKeyCode::X,
        BevyKeyCode::KeyY => IcedKeyCode::Y,
        BevyKeyCode::KeyZ => IcedKeyCode::Z,
        BevyKeyCode::Escape => IcedKeyCode::Escape,
        BevyKeyCode::F1 => IcedKeyCode::F1,
        BevyKeyCode::F2 => IcedKeyCode::F2,
        BevyKeyCode::F3 => IcedKeyCode::F3,
        BevyKeyCode::F4 => IcedKeyCode::F4,
        BevyKeyCode::F5 => IcedKeyCode::F5,
        BevyKeyCode::F6 => IcedKeyCode::F6,
        BevyKeyCode::F7 => IcedKeyCode::F7,
        BevyKeyCode::F8 => IcedKeyCode::F8,
        BevyKeyCode::F9 => IcedKeyCode::F9,
        BevyKeyCode::F10 => IcedKeyCode::F10,
        BevyKeyCode::F11 => IcedKeyCode::F11,
        BevyKeyCode::F12 => IcedKeyCode::F12,
        BevyKeyCode::F13 => IcedKeyCode::F13,
        BevyKeyCode::F14 => IcedKeyCode::F14,
        BevyKeyCode::F15 => IcedKeyCode::F15,
        BevyKeyCode::F16 => IcedKeyCode::F16,
        BevyKeyCode::F17 => IcedKeyCode::F17,
        BevyKeyCode::F18 => IcedKeyCode::F18,
        BevyKeyCode::F19 => IcedKeyCode::F19,
        BevyKeyCode::F20 => IcedKeyCode::F20,
        BevyKeyCode::F21 => IcedKeyCode::F21,
        BevyKeyCode::F22 => IcedKeyCode::F22,
        BevyKeyCode::F23 => IcedKeyCode::F23,
        BevyKeyCode::F24 => IcedKeyCode::F24,
        // BevyKeyCode::Snapshot => IcedKeyCode::Snapshot,
        // BevyKeyCode::Scroll => IcedKeyCode::Scroll,
        BevyKeyCode::Pause => IcedKeyCode::Pause,
        BevyKeyCode::Insert => IcedKeyCode::Insert,
        BevyKeyCode::Home => IcedKeyCode::Home,
        BevyKeyCode::Delete => IcedKeyCode::Delete,
        BevyKeyCode::End => IcedKeyCode::End,
        BevyKeyCode::PageDown => IcedKeyCode::PageDown,
        BevyKeyCode::PageUp => IcedKeyCode::PageUp,
        BevyKeyCode::ArrowLeft => IcedKeyCode::Left,
        BevyKeyCode::ArrowUp => IcedKeyCode::Up,
        BevyKeyCode::ArrowRight => IcedKeyCode::Right,
        BevyKeyCode::ArrowDown => IcedKeyCode::Down,
        BevyKeyCode::Backspace => IcedKeyCode::Backspace,
        BevyKeyCode::Enter => IcedKeyCode::Enter,
        BevyKeyCode::Space => IcedKeyCode::Space,
        // BevyKeyCode::Compose => IcedKeyCode::Compose,
        // BevyKeyCode::Caret => IcedKeyCode::Caret,
        BevyKeyCode::NumLock => IcedKeyCode::Numlock,
        BevyKeyCode::Numpad0 => IcedKeyCode::Numpad0,
        BevyKeyCode::Numpad1 => IcedKeyCode::Numpad1,
        BevyKeyCode::Numpad2 => IcedKeyCode::Numpad2,
        BevyKeyCode::Numpad3 => IcedKeyCode::Numpad3,
        BevyKeyCode::Numpad4 => IcedKeyCode::Numpad4,
        BevyKeyCode::Numpad5 => IcedKeyCode::Numpad5,
        BevyKeyCode::Numpad6 => IcedKeyCode::Numpad6,
        BevyKeyCode::Numpad7 => IcedKeyCode::Numpad7,
        BevyKeyCode::Numpad8 => IcedKeyCode::Numpad8,
        BevyKeyCode::Numpad9 => IcedKeyCode::Numpad9,
        // BevyKeyCode::AbntC1 => IcedKeyCode::AbntC1,
        // BevyKeyCode::AbntC2 => IcedKeyCode::AbntC2,
        BevyKeyCode::NumpadAdd => IcedKeyCode::NumpadAdd,
        // BevyKeyCode::Plus => IcedKeyCode::Plus,
        // BevyKeyCode::Apostrophe => IcedKeyCode::Apostrophe,
        // BevyKeyCode::Apps => IcedKeyCode::Apps,
        // BevyKeyCode::At => IcedKeyCode::At,
        // BevyKeyCode::Ax => IcedKeyCode::Ax,
        BevyKeyCode::Backslash => IcedKeyCode::Backslash,
        BevyKeyCode::LaunchApp2 => IcedKeyCode::Calculator,
        // BevyKeyCode::Capital => IcedKeyCode::Capital,
        // BevyKeyCode::Colon => IcedKeyCode::Colon,
        BevyKeyCode::Comma => IcedKeyCode::Comma,
        BevyKeyCode::Convert => IcedKeyCode::Convert,
        BevyKeyCode::NumpadDecimal => IcedKeyCode::NumpadDecimal,
        BevyKeyCode::NumpadDivide => IcedKeyCode::NumpadDivide,
        BevyKeyCode::Equal => IcedKeyCode::Equals,
        BevyKeyCode::Backquote => IcedKeyCode::Grave,
        BevyKeyCode::KanaMode => IcedKeyCode::Kana,
        // BevyKeyCode::Kanji => IcedKeyCode::Kanji,
        BevyKeyCode::AltLeft => IcedKeyCode::LAlt,
        BevyKeyCode::BracketLeft => IcedKeyCode::LBracket,
        BevyKeyCode::ControlLeft => IcedKeyCode::LControl,
        BevyKeyCode::ShiftLeft => IcedKeyCode::LShift,
        BevyKeyCode::SuperLeft => IcedKeyCode::LWin,
        BevyKeyCode::LaunchMail => IcedKeyCode::Mail,
        BevyKeyCode::MediaSelect => IcedKeyCode::MediaSelect,
        BevyKeyCode::MediaStop => IcedKeyCode::MediaStop,
        BevyKeyCode::Minus => IcedKeyCode::Minus,
        BevyKeyCode::NumpadMultiply => IcedKeyCode::NumpadMultiply,
        BevyKeyCode::AudioVolumeMute => IcedKeyCode::Mute,
        BevyKeyCode::LaunchApp1 => IcedKeyCode::MyComputer,
        // BevyKeyCode::BrowserForward => IcedKeyCode::NavigateForward,
        // BevyKeyCode::BrowserBack => IcedKeyCode::NavigateBackward,
        BevyKeyCode::MediaTrackNext => IcedKeyCode::NextTrack,
        BevyKeyCode::NonConvert => IcedKeyCode::NoConvert,
        BevyKeyCode::NumpadComma => IcedKeyCode::NumpadComma,
        BevyKeyCode::NumpadEnter => IcedKeyCode::NumpadEnter,
        BevyKeyCode::NumpadEqual => IcedKeyCode::NumpadEquals,
        // BevyKeyCode::Oem102 => IcedKeyCode::OEM102,
        BevyKeyCode::Period => IcedKeyCode::Period,
        BevyKeyCode::MediaPlayPause => IcedKeyCode::PlayPause,
        BevyKeyCode::Power => IcedKeyCode::Power,
        BevyKeyCode::MediaTrackPrevious => IcedKeyCode::PrevTrack,
        BevyKeyCode::AltRight => IcedKeyCode::RAlt,
        BevyKeyCode::BracketRight => IcedKeyCode::RBracket,
        BevyKeyCode::ControlRight => IcedKeyCode::RControl,
        BevyKeyCode::ShiftRight => IcedKeyCode::RShift,
        BevyKeyCode::SuperRight => IcedKeyCode::RWin,
        BevyKeyCode::Semicolon => IcedKeyCode::Semicolon,
        BevyKeyCode::Slash => IcedKeyCode::Slash,
        BevyKeyCode::Sleep => IcedKeyCode::Sleep,
        // BevyKeyCode::Stop => IcedKeyCode::Stop,
        BevyKeyCode::NumpadSubtract => IcedKeyCode::NumpadSubtract,
        // BevyKeyCode::Sysrq => IcedKeyCode::Sysrq,
        BevyKeyCode::Tab => IcedKeyCode::Tab,
        // BevyKeyCode::Underline => IcedKeyCode::Underline,
        // BevyKeyCode::Unlabeled => IcedKeyCode::Unlabeled,
        BevyKeyCode::AudioVolumeDown => IcedKeyCode::VolumeDown,
        BevyKeyCode::AudioVolumeUp => IcedKeyCode::VolumeUp,
        BevyKeyCode::WakeUp => IcedKeyCode::Wake,
        BevyKeyCode::BrowserBack => IcedKeyCode::WebBack,
        BevyKeyCode::BrowserFavorites => IcedKeyCode::WebFavorites,
        BevyKeyCode::BrowserForward => IcedKeyCode::WebForward,
        BevyKeyCode::BrowserHome => IcedKeyCode::WebHome,
        BevyKeyCode::BrowserRefresh => IcedKeyCode::WebRefresh,
        BevyKeyCode::BrowserSearch => IcedKeyCode::WebSearch,
        BevyKeyCode::BrowserStop => IcedKeyCode::WebStop,
        BevyKeyCode::IntlYen => IcedKeyCode::Yen,
        BevyKeyCode::Copy => IcedKeyCode::Copy,
        BevyKeyCode::Paste => IcedKeyCode::Paste,
        BevyKeyCode::Cut => IcedKeyCode::Cut,
        BevyKeyCode::Unidentified(_) => IcedKeyCode::Unlabeled,
        BevyKeyCode::IntlBackslash => IcedKeyCode::Backslash,
        BevyKeyCode::NumpadBackspace => IcedKeyCode::Backspace,
        // BevyKeyCode::Asterisk => IcedKeyCode::Asterisk,
        BevyKeyCode::IntlRo => todo!(),
        BevyKeyCode::Quote => todo!(),
        BevyKeyCode::CapsLock => todo!(),
        BevyKeyCode::ContextMenu => todo!(),
        BevyKeyCode::Lang1 => todo!(),
        BevyKeyCode::Lang2 => todo!(),
        BevyKeyCode::Lang3 => todo!(),
        BevyKeyCode::Lang4 => todo!(),
        BevyKeyCode::Lang5 => todo!(),
        BevyKeyCode::Help => todo!(),
        BevyKeyCode::NumpadClear => todo!(),
        BevyKeyCode::NumpadClearEntry => todo!(),
        BevyKeyCode::NumpadHash => todo!(),
        BevyKeyCode::NumpadMemoryAdd => todo!(),
        BevyKeyCode::NumpadMemoryClear => todo!(),
        BevyKeyCode::NumpadMemoryRecall => todo!(),
        BevyKeyCode::NumpadMemoryStore => todo!(),
        BevyKeyCode::NumpadMemorySubtract => todo!(),
        BevyKeyCode::NumpadParenLeft => todo!(),
        BevyKeyCode::NumpadParenRight => todo!(),
        BevyKeyCode::NumpadStar => todo!(),
        BevyKeyCode::Fn => todo!(),
        BevyKeyCode::FnLock => todo!(),
        BevyKeyCode::PrintScreen => todo!(),
        BevyKeyCode::ScrollLock => todo!(),
        BevyKeyCode::Eject => todo!(),
        BevyKeyCode::Meta => todo!(),
        BevyKeyCode::Hyper => todo!(),
        BevyKeyCode::Turbo => todo!(),
        BevyKeyCode::Abort => todo!(),
        BevyKeyCode::Resume => todo!(),
        BevyKeyCode::Suspend => todo!(),
        BevyKeyCode::Again => todo!(),
        BevyKeyCode::Find => todo!(),
        BevyKeyCode::Open => todo!(),
        BevyKeyCode::Props => todo!(),
        BevyKeyCode::Select => todo!(),
        BevyKeyCode::Undo => todo!(),
        BevyKeyCode::Hiragana => todo!(),
        BevyKeyCode::Katakana => todo!(),
        BevyKeyCode::F25 => todo!(),
        BevyKeyCode::F26 => todo!(),
        BevyKeyCode::F27 => todo!(),
        BevyKeyCode::F28 => todo!(),
        BevyKeyCode::F29 => todo!(),
        BevyKeyCode::F30 => todo!(),
        BevyKeyCode::F31 => todo!(),
        BevyKeyCode::F32 => todo!(),
        BevyKeyCode::F33 => todo!(),
        BevyKeyCode::F34 => todo!(),
        BevyKeyCode::F35 => todo!(),
    }
}

pub fn mouse_button(button: MouseButton) -> iced_core::mouse::Button {
    use iced_core::mouse::Button;
    match button {
        MouseButton::Left => Button::Left,
        MouseButton::Right => Button::Right,
        MouseButton::Middle => Button::Middle,
        MouseButton::Other(val) => Button::Other(val),
        // TODO: We need https://github.com/iced-rs/iced/pull/2169
        MouseButton::Back => todo!(),
        MouseButton::Forward => todo!(),
    }
}

pub fn touch_event(bevy_touch_input: &TouchInput) -> touch::Event {
    match *bevy_touch_input {
        TouchInput {
            phase: TouchPhase::Started,
            position: Vec2 { x, y },
            id: finger,
            ..
        } => touch::Event::FingerPressed {
            id: Finger(finger),
            position: Point { x, y },
        },
        TouchInput {
            phase: TouchPhase::Canceled,
            position: Vec2 { x, y },
            id: finger,
            ..
        } => touch::Event::FingerLost {
            id: Finger(finger),
            position: Point { x, y },
        },
        TouchInput {
            phase: TouchPhase::Ended,
            position: Vec2 { x, y },
            id: finger,
            ..
        } => touch::Event::FingerLifted {
            id: Finger(finger),
            position: Point { x, y },
        },
        TouchInput {
            phase: TouchPhase::Moved,
            position: Vec2 { x, y },
            id: finger,
            ..
        } => touch::Event::FingerMoved {
            id: Finger(finger),
            position: Point { x, y },
        },
    }
}
